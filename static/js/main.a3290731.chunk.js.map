{"version":3,"sources":["2ch.jpg","logo.jpg","15744156714930.png","15598716740580.jpg","okay.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","zachem","pnd","div","style","textAlign","startinfo","App","React","useState","open","setOpen","info","setInfo","handleClickOpen","text","console","log","handleClose","className","src","dvach","onClick","window","location","height","width","resizeMode","position","top","left","cursor","logo","padding","display","inf","psy","Dialog","fullScreen","onClose","PaperProps","backgroundColor","color","justifyContent","alignItems","right","okay","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,iQCQrCC,G,MAAS,uCACTC,EAAM,yBAAKC,KAAG,EAACC,MAAO,CAAEC,UAAW,WAA7B,IAA0C,8FAAqB,4BAC3E,6BAD2E,k3EAG3E,6BAH2E,8tDAI3E,6BAJ2E,owEAK3E,6BAL2E,0tEAO3E,6BAP2E,iZAQ3E,6BAR2E,2bAS3E,6BAT2E,8zBAWrEC,EAAY,yBAAKF,MAAO,CAAEC,UAAW,WAAzB,IAAsC,mOAA4C,4BACpG,6BADoG,qyCAGpG,6BAHoG,+wBAIpG,6BAJoG,sSAKpG,6BALoG,4IAMpG,6BANoG,oiCA8ErFE,MAtEf,WAAgB,IAAD,EACWC,IAAMC,UAAS,GAD1B,mBACNC,EADM,KACAC,EADA,OAEWH,IAAMC,SAAS,+BAF1B,mBAENG,EAFM,KAEAC,EAFA,KAGPC,EAAkB,SAACC,GACvBF,EAAQE,GACRC,QAAQC,IAAIF,GACZJ,GAAQ,IAKJO,EAAc,WAClBP,GAAQ,IAEV,OACE,yBAAKQ,UAAU,OACb,4BAAQA,UAAU,cAClB,yBAAKC,IAAKC,IAAOC,QATL,WACfC,OAAOC,SAAS,qBAQuBpB,MAAO,CAACqB,OAAQ,IAAKC,MAAO,IAAKC,WAAY,SAAUC,SAAU,WACtGC,IAAK,GACLC,KAAM,GAAGC,OAAO,aACrB,yBAAKT,QAAS,kBAAIR,EAAgBb,IAASG,MAAO,CAAC2B,OAAO,YAClD,yBAAKX,IAAKY,IAAM5B,MAAO,CAACqB,OAAQ,IAAKC,MAAO,IAAKO,QAAQ,MACzD,mHANF,WASQ,2BACJ,mKAEF,yBAAK7B,MAAO,CAACC,UAAW,SAAU6B,QAAS,gBACnD,yBAAK9B,MAAO,CAAC2B,OAAO,WAAYT,QAAS,kBAAIR,EAAgBR,KACrD,yBACAF,MAAO,CAACqB,OAAQ,IAAKC,MAAO,IAAKO,QAAQ,IACrCb,IAAKe,MAGT,oKAIR,yBAAKb,QAAS,kBAAIR,EAAgBZ,IAAME,MAAO,CAAC2B,OAAO,YAC/C,yBACA3B,MAAO,CAACqB,OAAQ,IAAKC,MAAO,IAAKO,QAAQ,IACrCb,IAAKgB,MAGT,yIAMF,kBAACC,EAAA,EAAD,CAAQC,YAAU,EAAC5B,KAAMA,EAAM6B,QAASrB,EAAasB,WAAY,CACnEpC,MAAO,CACLqC,gBAAiB,UAAWC,MAAO,WAGlC9B,EACD,yBAAKU,QAASJ,EAAad,MAAO,CAAC2B,OAAO,UAAWG,QAAS,OAAQN,SAAU,aAChF,yBAAKxB,MAAO,CAAE8B,QAAS,OAAQS,eAAgB,SAAUC,WAAY,SAAUhB,SAAU,WAAYC,IAAK,MAAOgB,MAAM,QACvH,yBACGzC,MAAO,CAACqB,OAAQ,IAAKC,MAAO,KAC3BN,IAAK0B,WC7EKC,QACW,cAA7BxB,OAAOC,SAASwB,UAEe,UAA7BzB,OAAOC,SAASwB,UAEhBzB,OAAOC,SAASwB,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.a3290731.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/2ch.162bf0ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.77caac82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/15744156714930.da5cff7e.png\";","module.exports = __webpack_public_path__ + \"static/media/15598716740580.a3c492ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/okay.e0baf624.png\";","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport dvach from './2ch.jpg';\nimport logo from './logo.jpg';\nimport psy from './15744156714930.png';\nimport inf from './15598716740580.jpg';\nimport okay from './okay.png';\nimport './App.css';\nconst zachem = <div> --- </div>\nconst pnd = <div div style={{ textAlign: \"center\" }}> <h1>Откос по пнд</h1><h2>\n<br />&#183; Самый простой способ откоса, дается сразу категория Д, забываешь о военкомате насовсем, но могут возникнуть проблемы с получением прав, что покупается, с работой в органах, скорее всего тебя не возьмут при закосе по любой другой причине,\nв больницах и в школах, с чем можно договориться, купить, распечатать на принтере нужную справку, обычно их никто не проверяет, в крайнем случае ты имеешь право в любой момент лечь в стационар в ПНД для снятия диагноза примерно на месяц.\n<br />&#183; Процедура закоса очень простая, достаточно зайти в кабинет психиатора в военкомате и сказать что принимаешь наркотики, режешь вены, заранее придумать полную историю как, хотя не обязательно можно и растеряться, можно так-же сказать что хикка, нет друзей и косить под расстройство личности, в этом случае возможно даже дадут права на машину.\n<br />&#183; Психиатор дает направление в стационар, где ты спокойно лежишь, 5 дней - 2 недели, играешь в карты, читаешь книги, иногда даже дают сидеть с телефона на дваче.  В любом случае полежать в дурке явно лучше, чем 365 дней в армии. Особенно с учётом того, что в дурке никто не будет тебя пиздить или дрочить физуху. Просто лежи себе и плюй в потолок. А ещё в дурке в отличии от армии ебанаты тихие, ибо под таблетками. А вот в армии ебанаты могут оказаться твоим начальством.\n<br />&#183; Если заранее посетить ПНД и получить диагноз, то лежать в психбольнице от военкомата не придётся с шансом 99%, только придти и часик попиздеть с врачами. Так же посещение ПНД заранее гарантирует отправку на обследование психиатром военкомата -\n у него есть специальные списки психов. Но помни, что они обновляются до 3 месяцев, так что идти в ПНД за день до посещения военкомата не так хорошо, а сходить заранее (например, на последнем курсе вузика)\n<br />&#183; В военнике не пишут диагноз, можешь придумать любой, да никто и не спрашивает.\n<br />&#183; При визите в ПНД лучше не говорить о суециде, могут запихнуть принудительно на месяц.\n<br />&#183; Обычно они сами спрашивают, хочешь служить в армии, если говоришь что нет, то пишут, иначе ты суешь гранату в жопу в части и тебя всеравно комиссуют, а им предъявят.\n</h2></div>\nconst startinfo = <div style={{ textAlign: \"center\" }}> <h1>Процедура получения военного билета</h1><h2>\n<br />&#183; Происходит осмотр в военкомате, на котором ты проходишь всех врачей и рассказываешь жалобы, врачи записывают их в карту и по результатом твоих жалоб, придседатель врачебной комиссии\nвыписывает направления на обследование в поликлинику или стационар.\n<br />&#183; Если непризывной диагноз подтвержден то районная комиссия признает тебя негодным и передает твое дело отправляется в комиссию субъекта федерации.\n<br />&#183; Ты ждешь месяц ответа от федеральной комиссии и ты либо:\n<br /> а) получаешь военный билет\n<br /> б) направляешься на подтверждение диагноза в федеральный медицинский центр(вот на этом пункте наебываются овердохуя челиков, которые \"купили\" диагноз у врача)\nи получаешь свой военник или идешь в армейку.</h2></div>\nfunction App() {\n  const [open, setOpen] = React.useState(false);\n  const [info, setInfo] = React.useState(<div></div>);\n  const handleClickOpen = (text) => {\n    setInfo(text);\n    console.log(text);\n    setOpen(true);\n  };\n const redirect = ()=>{\n   window.location='http://2ch.hk/wm/';\n }\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <img src={dvach} onClick={redirect} style={{height: 100, width: 100, resizeMode: 'center', position: 'absolute',\n     top: 20,\n     left: 20,cursor:'pointer'}}/>\n<div onClick={()=>handleClickOpen(zachem)} style={{cursor:'pointer'}}>\n        <img src={logo} style={{height: 300, width: 300, padding:10}} />\n        <figcaption>\nЗачем служить?\n</figcaption>\n</div>        <p>\n          <h1>ГАЙД ПО ОТКОСУ ОТ АРМЕЙКИ</h1>\n        </p>\n        <div style={{textAlign: 'center', display: 'inline-flex'}}>\n<div style={{cursor:'pointer'}} onClick={()=>handleClickOpen(startinfo)}>\n        <img\n        style={{height: 400, width: 400, padding:10}}\n            src={inf}\n\n        />\n        <figcaption>\nКак происходит процесс?\n</figcaption>\n</div>\n<div onClick={()=>handleClickOpen(pnd)} style={{cursor:'pointer'}}>\n        <img\n        style={{height: 400, width: 400, padding:10}}\n            src={psy}\n\n        />\n        <figcaption>\nКак откосить в ПНД?\n</figcaption>\n</div>\n</div>\n      </header>\n      <Dialog fullScreen open={open} onClose={handleClose} PaperProps={{\n    style: {\n      backgroundColor: '#282c34', color: 'white'\n    }\n  }}>\n      {info}\n      <div onClick={handleClose} style={{cursor:'pointer', display: 'flex', position: 'relative'}}>\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'absolute', top: '50%', right:'50%'}}>\n      <img\n         style={{height: 200, width: 200}}\n          src={okay}\n      />\n      </div>\n      </div>\n  </Dialog>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}